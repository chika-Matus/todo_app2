steps:
# Cloud Build でビルド
- id: "build image"
  name: "gcr.io/cloud-builders/docker"
  entrypoint: 'bash'
  args:
  - -c
  - |
    docker build \
      -t gcr.io/${PROJECT_ID}/${_SERVICE_NAME} \
      . \
      --build-arg MASTER_KEY=$$MASTER_KEY
  secretEnv:
  - MASTER_KEY
# Container Registry にアップロード
- id: "push image"
  name: "gcr.io/cloud-builders/docker"
  args:
  - push
  - gcr.io/${PROJECT_ID}/${_SERVICE_NAME}
# db:migrate
- id: "apply migrations"
  name: "gcr.io/google-appengine/exec-wrapper"
  entrypoint: "bash"
  args:
  - -c
  - |
    /buildstep/execute.sh \
      -i gcr.io/${PROJECT_ID}/${_SERVICE_NAME}\
      -s ${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME} \
      -e MASTER_KEY=$$MASTER_KEY \
      -- bundle exec rails db:migrate
# Cloud Run デプロイ
- id: 'deploy'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
  - -c
  - |
    gcloud run deploy $_SERVICE_NAME \
      --image gcr.io/${PROJECT_ID}/${_SERVICE_NAME} \
      --region asia-northeast1 \
      --add-cloudsql-instances ${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME} \
      --allow-unauthenticated
substitutions:
  _SERVICE_NAME: sample-app-service
  _REGION: asia-northeast1
  _INSTANCE_NAME: sample-app-db-instance
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/MASTER_KEY/versions/latest
    env: MASTER_KEY
images:
  - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"
timeout: 600s
